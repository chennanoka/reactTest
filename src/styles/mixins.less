// Type
// ----
@baseFontSize: 14px;
// Colors
// ------
@red: rgb(226, 89, 66);
@darkRed: darken(@red, 10%);
@teal: rgb(7, 153, 159);
@darkTeal: rgb(6, 129, 133);
@lightTeal: #B5E0DD;
@blackish: #003638;
@black: rgb(43, 52, 61);
@offBlack: rgb(72, 80, 88);
@white: #FFF;
@offWhite: rgb(209, 223, 227);
@green: rgb(68, 177, 119);
@qualityGreen: #00AF4E;
@lightGray: rgb(248, 248, 248);
@gray: rgb(237, 237, 237);
@darkGray: rgb(176, 176, 176);
@grayHeader: rgb(179, 179, 179);
@grayText: rgb(102, 102, 102);
@faded: #E6E8E8;
@filterBlack: rgb(43, 52, 61);
@dark: #A0A6AC;
@navy: #26313D;
@orange: #D04A02;
@darkOrange: #E6521D;
@lightOrange: #F9B39A;
@baseFontColor: @black;
// Variable replacements for named colors
@defaultRed: rgb(255, 0, 0);
@defaultBlack: rgb(0, 0, 0);
@defaultGray: rgb(128, 128, 128);
// Work Sequence States
@draftState: rgb(243, 151, 41);
@openState: rgb(129, 136, 137);
@awaitingAdvancementState: rgb(32, 195, 120);
@pendingApprovalState: rgb(32, 195, 120);
@closedState: rgb(32, 173, 199);
@rejectedState: rgb(230, 58, 64);
// Work Sequence Actions
@openAction: rgb(129, 136, 137);
@completeAction: rgb(32, 195, 120);
@advanceStageAction: rgb(129, 136, 137);
@approveAction: rgb(32, 173, 199);
@closeAction: rgb(129, 136, 137);
@rejectAction: rgb(230, 58, 64);
@reopenAction: rgb(129, 136, 137);
//Work Sequence List Headers
@statusWidth: 235px;
@numberWidth: 125px;
@imageWidth: 145px;
@nameWidth: 355px;
@locationWidth: ~'calc(100% - 1030px)';
@semibold: 600;
// Dimensions
// ----------
@modalZIndex: 1000000;
@overlayZIndex: 1000;
@standardBorderRadius: 3px;
@navbarHeight: 3rem;
@setupInfoBarHeight: 5.5rem;
@projectMenuListWidth: 14rem;
@workSectionNavHeight: 3.5rem;
@workSequenceListWidth: 35%;
@workSequenceListItemHeight: 6rem;
@workSequenceDetailOverflow: 1rem;
@dropdownWidth: 20rem;
@inputMargin: 0.5rem;
@mobileTransition: 600ms ease-in-out;
@smallDesktop: 1200px;
@tablets: 1024px;
@phones: 721px;
// Helpful LESS functions
// ----------------------
.border-box() {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}

.transform(@string) {
    -webkit-transform: @string;
    -moz-transform: @string;
    -ms-transform: @string;
    -o-transform: @string;
    transform: @string;
}

.transition(@transition) {
    -webkit-transition: @transition;
    -moz-transition: @transition;
    -ms-transition: @transition;
    -o-transition: @transition;
    transition: @transition;
}

.multitransition(@value1, @value2: X, ...) {
    @value: ~`'@{arguments}'.replace(/[\[\]]|\, \sX/g, '')`;
    -webkit-transition: @value;
    -moz-transition: @value;
    -ms-transition: @value;
    -o-transition: @value;
    transition: @value;
}

.transformTransition(@transition) {
    -webkit-transition:~'-webkit-@{transition}';
    -moz-transition:~'-moz-@{transition}';
    -ms-transition:~'-ms-@{transition}';
    -o-transition:~'-o-@{transition}';
    transition: @transition;
}

.centerFlex() {
    -ms-flex: 1 1 auto;
    display: flex;
    justify-content: center;
    align-items: center;
}

.stretchFlex() {
    -ms-flex: 1 1 auto;
    display: flex;
    align-items: stretch;
}

.ellipsis() {
    overflow-x: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.placeholder(@rules) {
    &::-webkit-input-placeholder {
        @rules();
    }
    &:-moz-placeholder {
        @rules();
    }
    &::-moz-placeholder {
        @rules();
    }
    &:-ms-input-placeholder {
        @rules();
    }
}

.button {
    .border-box;
    text-transform: uppercase;
    padding: 0.45rem 1rem;
    text-align: center;
    display: inline-block;
    line-height: 1.5rem;
    font-size: 0.9rem;
    border-radius: @standardBorderRadius;
    cursor: pointer;
    &.primary {
        color: @white;
        background-color: @teal;
        &:hover {
            background-color: @darkTeal;
        }
    }
    &.delete {
        color: @white;
        background-color: @red;
        &:hover {
            background-color: @darkRed;
        }
    }
    &.fullWidth {
        width: 100%;
    }
}